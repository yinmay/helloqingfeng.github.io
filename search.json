[{"title":"重装系统后，Hexo博客如何重新部署恢复","url":"http://helloqingfeng.github.io/2017/02/25/hexo-rebuilding/","content":"<p>今天偶然想到要更新博客了，写文章时发现用不了。原来是电脑重装了系统，Hexo博客需要重新部署恢复。具体该怎么弄呢，就在网上搜索解决办法，网上的内容也是挺乱的。自己就按照某些思路来尝试解决。</p>\n<p>还好，没费多大功夫，Hexo博客又重生了。</p>\n<p><img src=\"http://ww1.sinaimg.cn/large/66101050ly1fd2szawfzuj20hs07sq36\" alt=\"\"></p>\n<h2 id=\"Hexo博客部署恢复\"><a href=\"#Hexo博客部署恢复\" class=\"headerlink\" title=\"Hexo博客部署恢复\"></a>Hexo博客部署恢复</h2><p>先说下我的情况：电脑重装了系统，hexo博客文件夹还在D盘存着，完好无损。现在就是借助这些文件恢复部署一下就好了。具体方法如下：</p>\n<p>一、安装 node.js 和 git for windows</p>\n<p>二、配置 git 个人信息，生成新的 ssh 密钥：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">git config --global user.name &quot;helloqingfeng&quot;</div><div class=\"line\">git config --global user.email &quot;128994000@qq.com&quot;</div><div class=\"line\">ssh-keygen -t rsa -C &quot;128994000@qq.com&quot;</div></pre></td></tr></table></figure></p>\n<p>你需要把邮件地址和用户名换成你自己的，然后一路回车，使用默认值即可。</p>\n<p>如果一切顺利的话，可以在用户主目录里找到.ssh目录，里面有id_rsa和id_rsa.pub两个文件，打开id_rsa.pub文件，复制里面的内容。</p>\n<p>三、将生成的ssh公钥（刚复制的内容）复制到Github的settings里面的ssh选项里去</p>\n<p>四、安装hexo：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install hexo-cli -g</div></pre></td></tr></table></figure></p>\n<p>五、打开原来的hexo博客所在文件夹，只需保留_config.yml，theme/，source/，scaffolds/，package.json，.gitignore 这些项目，删除其他的文件。</p>\n<p>六、然后打开 git bush 运行命令：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install</div></pre></td></tr></table></figure></p>\n<p>七、安装部署插件：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install hexo-deployer-git --save //hexo d 部署到git插件</div></pre></td></tr></table></figure></p>\n<p>八、接下来直接hexo g hexo d试一下是否成功。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo g</div><div class=\"line\">hexo d</div></pre></td></tr></table></figure></p>\n<p>博客部署恢复完成。</p>\n<h2 id=\"Hexo部署过程中的难点解决：\"><a href=\"#Hexo部署过程中的难点解决：\" class=\"headerlink\" title=\"Hexo部署过程中的难点解决：\"></a>Hexo部署过程中的难点解决：</h2><p><strong>1、如果博客有RSS订阅和站点地图功能</strong>，请在第七步安装下面两个插件，命令如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install hexo-generator-feed --save  //RSS订阅插件</div><div class=\"line\">npm install hexo-generator-sitemap --save //站点地图插件</div></pre></td></tr></table></figure></p>\n<p><strong>2、安装部署过程中，在git bash中使用<code>hexo g</code>或者<code>hexo d</code>等命令，会报错提示： Cannot find module ‘C:\\Program Files\\Git\\node_modules\\hexo-cli\\bin\\hexo’。</strong><br>如图所示：</p>\n<p><img src=\"http://ww1.sinaimg.cn/large/66101050ly1fd2sjp9y5hj20k105hq3q\" alt=\"\"></p>\n<p><strong>我当时的解决办法：</strong><br>在C盘用户目录下，找到这个文件夹：C:\\Users\\Administrator\\AppData\\Roaming\\npm\\node_modules\\hexo-cli。<br>然后把node_modules这个文件夹复制到Git安装目录下（C:\\Program Files\\Git）即可。</p>\n<p><strong>3、怎么用hexo上传一个README.md到github?</strong><br>因为README.md文件一执行<code>hexo d</code>命令之后，README文件就被渲染变为README.html文件。</p>\n<p><strong>解决办法：</strong><br>在Hexo目录下的source根目录下添加一个 README.md；<br>修改Hexo目录下的_config.yml，设置 skip_render: README.md保存退出即可；<br>使用hexo d 命令就不会再渲染 README.md 这个文件了。</p>\n","categories":["hexo"],"tags":["hexo","git","node"]},{"title":"常用 HTTP 方法及状态码整理","url":"http://helloqingfeng.github.io/2017/02/24/http-methods-and-status/","content":"<p>HTTP 为一个通信协议。HTTP 客户端发起请求并创建端口，HTTP 服务器在端口监听客户端的请求。<br>HTTP 服务器在收到请求后则返回状态和所请求的内容。</p>\n<p><img src=\"http://ww1.sinaimg.cn/mw690/66101050ly1fd1x389ugvj20zk0m87ca\" alt=\"\"></p>\n<h1 id=\"一、网页浏览全过程（粗浅流程）\"><a href=\"#一、网页浏览全过程（粗浅流程）\" class=\"headerlink\" title=\"一、网页浏览全过程（粗浅流程）\"></a>一、网页浏览全过程（粗浅流程）</h1><ol>\n<li>域名解析<ol>\n<li>搜索浏览器自身 DNS 缓存</li>\n<li>搜索操作系统自身 DNS 缓存（如上一级未找到或已失效）</li>\n<li>读取本地 HOST 文件 （如上一级未找到或已失效，/etc/hosts）</li>\n<li>浏览器发起 DNS 系统调用请求<ol>\n<li>ISP 服务器查找自身缓存</li>\n<li>ISP 服务器发起迭代（逐域寻找需要的地址）请求</li>\n</ol>\n</li>\n</ol>\n</li>\n<li>得到请求资源的 IP 地址</li>\n<li>发起 HTTP “三次握手”（下面为一个超级简化版）<ol>\n<li>建立连接，等待服务器确认</li>\n<li>服务器接受请求，回复客户</li>\n<li>客户端与服务器连接成功（TCP/IP 连接成功）</li>\n</ol>\n</li>\n<li>客户根据协议发送请求</li>\n<li>服务器更具请求返回客户需求资源</li>\n<li>客户获得资源</li>\n</ol>\n<h1 id=\"二、常用-HTTP-方法\"><a href=\"#二、常用-HTTP-方法\" class=\"headerlink\" title=\"二、常用 HTTP 方法\"></a>二、常用 HTTP 方法</h1><h2 id=\"常用方法\"><a href=\"#常用方法\" class=\"headerlink\" title=\"常用方法\"></a>常用方法</h2><table>\n<thead>\n<tr>\n<th>方法</th>\n<th>描述</th>\n<th>是否包含主题</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>GET</td>\n<td>从服务器获取一份文档</td>\n<td>否</td>\n</tr>\n<tr>\n<td>POST</td>\n<td>向服务器发送需要处理的数据</td>\n<td>是</td>\n</tr>\n<tr>\n<td>PUT</td>\n<td>将请求的主题部分储存在服务器上</td>\n<td>是</td>\n</tr>\n<tr>\n<td>DELETE</td>\n<td>从服务器删除一份文档</td>\n<td>否</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"不常用方法\"><a href=\"#不常用方法\" class=\"headerlink\" title=\"不常用方法\"></a>不常用方法</h2><table>\n<thead>\n<tr>\n<th>方法</th>\n<th>描述</th>\n<th>是否包含主题</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>HEAD</td>\n<td>只从服务器获取头文档的首部</td>\n<td>否</td>\n</tr>\n<tr>\n<td>TRACE</td>\n<td>对可能经过代理服务器传送到服务器上的报文进行追踪</td>\n<td>否</td>\n</tr>\n<tr>\n<td>OPTIONS</td>\n<td>决定可以在服务器上执行的方法</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"三、常见-HTTP-状态码\"><a href=\"#三、常见-HTTP-状态码\" class=\"headerlink\" title=\"三、常见 HTTP 状态码\"></a>三、常见 HTTP 状态码</h1><table>\n<thead>\n<tr>\n<th>状态码</th>\n<th>描述</th>\n<th>代码描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>200</td>\n<td>请求成功，一般用于 GET 和 POST 方法</td>\n<td>OK</td>\n</tr>\n<tr>\n<td>301</td>\n<td>资源移动。所请求资源自动到新的 URL，浏览器自动跳转至新的 URL</td>\n<td>Moved Permanently</td>\n</tr>\n<tr>\n<td>304</td>\n<td>未修改。所请求资源未修改，浏览器读取缓存数据</td>\n<td>Not Modified</td>\n</tr>\n<tr>\n<td>400</td>\n<td>请求语法错误，服务器无法解析</td>\n<td>Bad Request</td>\n</tr>\n<tr>\n<td>403</td>\n<td>禁止访问</td>\n<td>Forbidden</td>\n</tr>\n<tr>\n<td>404</td>\n<td>未找到资源，可以设置个性“404页面”</td>\n<td>Not Found</td>\n</tr>\n<tr>\n<td>500</td>\n<td>服务器内部错误</td>\n<td>Internal Server Error</td>\n</tr>\n<tr>\n<td>502</td>\n<td>网关错误</td>\n<td>Bad gateway</td>\n</tr>\n<tr>\n<td>503</td>\n<td>服务不可用</td>\n<td>Service unavailable</td>\n</tr>\n<tr>\n<td>504</td>\n<td>网关超时</td>\n<td>Gateway timeout</td>\n</tr>\n</tbody>\n</table>\n","categories":["前端"],"tags":["前端","HTTP"]},{"title":"如何下载获取Youtube视频的高清封面？","url":"http://helloqingfeng.github.io/2016/12/21/how-to-get-Youtube-cover/","content":"<p>下载Youtube视频的时候，有时我们顺便想获取该视频的高清封面。但是直接右键保存，只能<br>保存小图。那有什么办法呢？<br><img src=\"http://ww3.sinaimg.cn/mw690/66101050jw1fayi8rsqb9j20sg0g041k.jpg\" alt=\"\"></p>\n<p>我通过搜索实践，找到了两种简单的方法，原理基本差不多。</p>\n<h2 id=\"方法一\"><a href=\"#方法一\" class=\"headerlink\" title=\"方法一\"></a>方法一</h2><ol>\n<li><p>在你搜索出的视频列表页面，找到你要下载的视频，在该视频封面上右键点击，然后点击“在新标签页中打开图片”，会打开一个小图<br><img src=\"http://ww4.sinaimg.cn/large/66101050jw1fayh3c9ag6j20kg09mgme.jpg\" alt=\"\"></p>\n</li>\n<li><p>新页面打开的图片的网址就像下面这样的，然后你把.jpg后面部分的内容都删除，按“Enter”键就能得到高清大图了</p>\n</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">https://i.ytimg.com/vi/II_Xmh0m-jo/hqdefault.jpg?custom=true&amp;w=246&amp;h=138&amp;stc=true&amp;jpg444=true&amp;jpgq=90&amp;sp=68&amp;sigh=iSicyl14Tpx6X3_J4T0uCTxeSgQ</div></pre></td></tr></table></figure>\n<h2 id=\"方法二\"><a href=\"#方法二\" class=\"headerlink\" title=\"方法二\"></a>方法二</h2><ol>\n<li><p>打开你要下载封面的那个视频的页面，右键点击空白处选择查看网页源代码（View the page source)</p>\n</li>\n<li><p>在源代码页面按Ctrl+F进行查找，输入：og:image</p>\n</li>\n<li><p>查找结果出现，og:image后边跟着的网址就是图片地址，如下所示：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;meta property=&quot;og:image&quot; content=&quot;https://i.ytimg.com/vi/dNk9izag03g/hqdefault.jpg&quot;&gt;</div></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>一般是.jpg结尾的，打开这个链接就是这个视频的封面图片，右键下载保存即可</p>\n<p><strong>备注：</strong><br>方法二来源：<a href=\"https://www.zhihu.com/question/46597396/answer/114199774\" target=\"_blank\" rel=\"external\">https://www.zhihu.com/question/46597396/answer/114199774</a></p>\n","categories":["碎碎念"],"tags":["下载","工具"]},{"title":"Hello World","url":"http://helloqingfeng.github.io/2016/12/20/hello-world/","content":"<h1 id=\"Welcome-This-is-my-first-post\"><a href=\"#Welcome-This-is-my-first-post\" class=\"headerlink\" title=\"Welcome! This is my first post.\"></a>Welcome! This is my first post.</h1><blockquote>\n<p>“荣华之梦，我倒不怎么渴望，只希望从容享受这四季的美景，每当失去，还能够期待她们再次归来。”——《源氏物语》</p>\n</blockquote>\n","categories":["碎碎念"],"tags":["分享"]},{"title":"about","url":"http://helloqingfeng.github.io/about/index.html","content":"","categories":[],"tags":[]},{"title":"","url":"http://helloqingfeng.github.io/css/personal-style.css","content":"html.page-home {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-image: url('/images/back-min.jpg');\n  background-color: transparent;\n  background-size: cover;\n  background-position: center center;\n  background-repeat: no-repeat;\n  color：#009688;\n\n  /*background: linear-gradient( #1abc9c, transparent), linear-gradient( 90deg, skyblue, transparent), linear-gradient( -90deg, coral, transparent);*/\n  /*background-blend-mode: screen;*/\n\n  /*background: linear-gradient(to left, #5f2c82, #49a09d);*/\n}","categories":[],"tags":[]},{"title":"category","url":"http://helloqingfeng.github.io/category/index.html","content":"","categories":[],"tags":[]},{"title":"project","url":"http://helloqingfeng.github.io/project/index.html","content":"<p>project:</p>\n<ul>\n<li>type: personal<br>name: fexo<br>url: <a href=\"https://github.com/forsigner/fexo\" target=\"_blank\" rel=\"external\">https://github.com/forsigner/fexo</a><br>intro: A minimalist design theme for hexo<h1 id=\"type-company\"><a href=\"#type-company\" class=\"headerlink\" title=\"- type: company\"></a>- type: company</h1><h1 id=\"name-Fexo\"><a href=\"#name-Fexo\" class=\"headerlink\" title=\"name: Fexo\"></a>name: Fexo</h1><h1 id=\"url-https-github-com-forsigner-fexo\"><a href=\"#url-https-github-com-forsigner-fexo\" class=\"headerlink\" title=\"url: https://github.com/forsigner/fexo\"></a>url: <a href=\"https://github.com/forsigner/fexo\" target=\"_blank\" rel=\"external\">https://github.com/forsigner/fexo</a></h1><h1 id=\"intro-A-minimalist-design-theme-for-hexo\"><a href=\"#intro-A-minimalist-design-theme-for-hexo\" class=\"headerlink\" title=\"intro: A minimalist design theme for hexo\"></a>intro: A minimalist design theme for hexo</h1></li>\n<li>type: personal<br>name: beside<br>url: <a href=\"https://github.com/forsigner/beside\" target=\"_blank\" rel=\"external\">https://github.com/forsigner/beside</a><br>intro: I need you beside me</li>\n<li>type: personal<br>name: web-fontmin<br>url: <a href=\"https://github.com/forsigner/web-fontmin\" target=\"_blank\" rel=\"external\">https://github.com/forsigner/web-fontmin</a><br>intro: 字体子集化，在线提取你需要的字体</li>\n<li>type: personal<br>name: magic-check<br>url: <a href=\"https://github.com/forsigner/magic-check\" target=\"_blank\" rel=\"external\">https://github.com/forsigner/magic-check</a><br>intro: Beautify Radio and Checkbox with pure CSS</li>\n<li>type: personal<br>name: nice-bar<br>url: <a href=\"https://github.com/forsigner/nice-bar\" target=\"_blank\" rel=\"external\">https://github.com/forsigner/nice-bar</a><br>intro: A nice and lightweight scrollbar</li>\n<li>type: personal<br>name: angular-nice-bar<br>url: <a href=\"https://github.com/forsigner/angular-nice-bar\" target=\"_blank\" rel=\"external\">https://github.com/forsigner/angular-nice-bar</a><br>intro: A nice and lightweight scrollbar in Angular</li>\n</ul>\n","categories":[],"tags":[]},{"title":"link","url":"http://helloqingfeng.github.io/link/index.html","content":"","categories":[],"tags":[]},{"title":"search","url":"http://helloqingfeng.github.io/search/index.html","content":"","categories":[],"tags":[]},{"title":"tag","url":"http://helloqingfeng.github.io/tag/index.html","content":"","categories":[],"tags":[]}]